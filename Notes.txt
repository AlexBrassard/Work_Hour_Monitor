/*
 *
 * Work Hour Monitor v2.0  -  Notes.
 *
 */
TOP
----
Very Important:
Note: Fail like you were born to fail:
    Any modifications should be written to disk only at the
    very last moment so that when failing due to an error or a strong
    will to cancel everything, not everything gets messed up.    


Very Important:
Note: Sometimes no answer's an answer:
    Adjust whm_ask_user() so that for certain questions no answer means don't
    touch anything, so questions like SHEET_WORKED_HOURS that'd get an empty answer
    (a single newline) understands it as "I'll input the hours later."


Very Important:
Note: I'm leaving! But please don't be mad..:
    Every time WHM asks its users something, there must be safe escape routes,
    safe meaning without consequences on the program's existing data.
    There should be a way to quit the program totaly, without data lost other than
    what hasn't been already saved to disk, even in the middle of say modifing the configuration file.
    At each steps there should be an option to roll back one or more steps
    in order to modify/overwrite something we've just input.


Important:
Note: Not that twins aren't cool, they're just too confusing:
    When using any of the _modify_config() functions, an additional check
    must be made to make sure no company or position name gets duplicated.


Note: Wait till I'm done you little...:
    I'll wait till the program is finished then add 2 fields to see if I did
    a good job in making it easy to add informations.
    These are:
     . total hours since creation (anciennette, english -> ? )
     . holiday cash ($ to be paid when going on vacation)
    


Note: Options and their arguments:
    A short option begins by a single dash followed by a single alphabetic character.
    A long option begins by two dashes followed by one or more alphanumeric characters.
    Both can take arguments of the form:     arg_name=value    with no spaces in between.
    An options that can take one or more arguments but which is given none when called
    on the command line will fall through to it's whm_interac_* function.

    whm_interac_modify_config() and whm_parse_options() are both responsible
    of validating the company name and finding its index in the whm_config_T* array
    to correctly feed whm_modify_config().


Note: Ignore any comments your hear, but remember all of them just in case:
    Since the configuration file should not be edited by hand,
    the position of commentaries and the comments themselfs should not
    be recorded but it will be very required for operations on hour sheets.


Note: Install me properly:
    The installation script needs to be reworked. First, a makefile must be created
    to handle everything related to program's compilation.
    The install script should interactively create (with the option to do it automaticaly)
    the 'whm_sysdep.h' file, which is mostly system/user dependent pathnames.


Mixed Notes:
  - Use fgets to read one line at a time.
  - The configuration file should not be edited by hand.
  - No streams should be passed through functions.
  - A separate header should be made for all values (pathnames)
    a user must set at the program installation.
    The installation script will create this file and prompt the
    user for all required system specific values.
  - Make sure it's easy to add more options.
  - The function to read hour sheets should not depend directly on sheet_T->numof_positions.
    It should know when the configuration file has changed and should be able to reflect
    these changes.
  - Every run:
    . Check if the .whm.d directory exist.
    . Check if the configuration file exist and is valid.
    . Read the configuration file, populating internal structure.
    . Fetch the current date.
    . Check that each company found in the configuration file has an existing working directory.
    . Check that the current year directory exists for each company.
    . Check that the hour sheet for the current month for each company exist.
    . Backup all required hour sheets.
    . Read all required hour sheets.
    . Check for and execute command line options (not executing the next points).
    . When no options were passed, interactively update all non-filled hour sheets.
    . Write all updated hour sheets.
    . Delete all hour sheet backups.
    . Free all memory and exit.
  - Options are: ((): non required options.)
    . -p  --print  [name()] [year()] [month()]			Print an hour sheet to stdout.
    . -u  --update [name()] [position()] [hours()] [date()]	Update a company's hour sheet.
    . -a  --add    (fully interactive) 		 		Add a company to the configuration file.
    . -d  --delete [name()]					Delete a company from the configuration file.
    . -m  --modify [name()] [position()] [field()] [value()]	Modify an existing entry in the configuration file.
    . -l  --list   						Print a list of the companies names in the configuration file.
    . -h  --help  						Print a short help message.

The idea:
    Work Hour Monitor will prompt its users at least once a day
    for the number of hours worked.
    A configuration file will be used
    to store information about tracked companies, and use this
    info to create, once a month, an hour sheet for that company
    for that month.
    WHM should expect all of the content of the ~/.whm.d/ directory
    to be edited by hand and should reflect these changes the next
    time it's run.
    All files within the ~/.whm.d/ directory should be editable
    interactively within WHM or directly from switches on the command line.
    WHM will calculate the amount of hours and money made for each active
    company in the configuration file.
    WHM should expect that the number of parameters that influence a salary
    can vary and it should be built so it's easy to add/remove any.


/******************************************* Completed **********************************************/

[Solved: See below]
Very Important: 
Note: It's ok to do yourself a manual job but..:
    The hour sheet must be editable by hand, but a user should not
    have to calculate the amount of money made, whm should.
    whm_read_sheet() should ensure that when the whole sheet has been
    parsed and stored into the sheet_T object, all filled hours filed
    has a their corresponding earning field filled and vice-versa.

[whm_update_sheet() recalculate everthing every run]
    How to determine an hour sheet has been modified, and which fields
    of the file has been modified?
    Make a hidden directory: .last_run.d/ that would keeps a double of the
    latest version of each sheets the program has seen every time is ran.
    A sheet is first read in memory, then it's double is read and
    both are compared against each others, adjusting the differences
    (if old > new then 
    If nothing has changed whm_update_sheet() isn't called.

    Compare each current days and their doubles if it's the same no calculs must be done but:
    if earnings are bigger than hours, adjust hours else if hours are bigger than 0 adjust earnings.
    Each weeks and month data must be reseted before any calcul is to be done on them.

[Made global arrays of sheet_T and config_T pointers for exactly this.]
    A list of updated sheets waiting to be written to disk sounds like a good idea.

    What I really want: A user can edit any fields of an hour sheet and whm will adjust the
    related values accordingly.


[Done: Created s_strcmp within Libsafeutils, that has a flag for this.]
Important:
Note: Different cases, same problems:
    Whm_ask_user must not be sensitive to case (upper/lower) when it asks users for
    input. So "SLB", "Slb", "slb", "sLb", etc are all equivalent.


[Done: s_strcmp now handles case-insensitive comparaisons. ]
Very Important: 
Note: Careful not to let to much spaces between them:
    Spaces and underscores should be interchangeable when asking user to
    input values so that "harvey inox" and "harvey_inox" would both match
    the same entry.
    

[Done: The user is warned that the existing file is removed and recreated.]
Important:
Note: Fill those empty bellies:
    A configuration file that contains only a heading message or
    other comments should be considered empty and be removed to
    be recreated.


